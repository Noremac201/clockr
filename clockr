#!/usr/bin/python
# -*- coding: utf-8 -*-

import curses
from math import floor
from datetime import datetime as date
import sys


for arg in sys.argv:
    dateargs = arg
    aboutargs = arg
    helpargs = arg

if helpargs in ["help", "-h", "-help", "-H", "--h"]:
    print( "usage: -h shows this help, pressing q exits.")
    sys.exit()

if aboutargs in ["about", "-a", "-about", "-A", "--a"]:
    print("about: small clock tool made by shaggytwodope " \
            "with some help from /r/linuxmasterrace irc\n"\
            "thanks to n473, thimoteus,  AWindowsKrill, timawesomeness, and somehow R0flcopt3r.")
    sys.exit()

screen          = curses.initscr()
last_width      = 0
last_height     = 0
glyph               = {
    '0': ["  #####   ", " ##   ##  ", "##     ## ", "##     ## ", "##     ## ", " ##   ##  ", "  #####   "],
    '1': ["    ##    ", "  ####    ", "    ##    ", "    ##    ", "    ##    ", "    ##    ", "  ######  "],
    '2': [" #######  ", "##     ## ", "       ## ", " #######  ", "##        ", "##        ", "######### "],
    '3': [" #######  ", "##     ## ", "       ## ", " #######  ", "       ## ", "##     ## ", " #######  "],
    '4': ["##        ", "##    ##  ", "##    ##  ", "##    ##  ", "######### ", "      ##  ", "      ##  "],
    '5': [" ######## ", " ##       ", " ##       ", " #######  ", "       ## ", " ##    ## ", "  ######  "],
    '6': [" #######  ", "##     ## ", "##        ", "########  ", "##     ## ", "##     ## ", " #######  "],
    '7': [" ######## ", " ##    ## ", "     ##   ", "    ##    ", "   ##     ", "   ##     ", "   ##     "],
    '8': [" #######  ", "##     ## ", "##     ## ", " #######  ", "##     ## ", "##     ## ", " #######  "],
    '9': [" #######  ", "##     ## ", "##     ## ", " ######## ", "       ## ", "##     ## ", " #######  "],
    ':': ["   ", "   ", " # ", "   ", " # ", "   ", "   "]
}

def addstr(y, x, string, color):
    try:
                screen.addstr( origin_y + y, origin_x + x, string, color)
                screen.refresh()
    except: return


def print_time(now):
    time_line = now.strftime("%I:%M:%S")
    time_array = ["" for i in range(0, 7)]

    for char in time_line:
        char_array = glyph[char]
        for row in range(0, len(char_array)):
            time_array[row] += char_array[row]

    for y in range(0, len(time_array)):
        for x in range(0, len(time_array[y])):
            char = time_array[y][x]
            color = 1 if char == " " else 3
            addstr(y, x, " ",
                    curses.color_pair(color))

    addstr(6, len(time_array[0]), now.strftime("%p"),
            curses.color_pair(2) | curses.A_BOLD)


def print_date(now):
    day_line = now.strftime("%A").center(11, " ")
    date_line = now.strftime("%B %d, %Y")
    if dateargs in ["nodate", "-nd", "-nodate", "-nd", "--nd"]:
        pass
    else:
        addstr(8, 0, day_line, curses.color_pair(3))
        addstr(8, len(day_line) + 40, date_line, curses.color_pair(2) | curses.A_BOLD)


screen.keypad(1)
curses.curs_set(0)
curses.start_color()
curses.use_default_colors()
curses.init_pair(1, 0, -1)
curses.init_pair(2, 3, -1)
curses.init_pair(3, 0, 3)
curses.noecho()
curses.cbreak()

a = 0
while True:
    width = screen.getmaxyx()[1]
    height = screen.getmaxyx()[0]
    origin_x = floor(width / 2) - 34
    origin_y = floor(height / 2) - 4
    now = date.now()

    if width != last_width or height != last_height: screen.clear()
    last_width = width
    last_height = height

    print_time(now)
    print_date(now)

    screen.timeout(30)
    char = screen.getch()
    if char == 113: break

curses.endwin()
